name: Build and Deploy Robot Shop

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-user:
    name: Build User Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push User Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/user:latest ./user
          docker push ${{ secrets.DOCKER_USERNAME }}/user:latest

  build-cart:
    name: Build Cart Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Cart Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cart:latest ./cart
          docker push ${{ secrets.DOCKER_USERNAME }}/cart:latest

  build-web:
    name: Build Web Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Web Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/web:latest ./web
          docker push ${{ secrets.DOCKER_USERNAME }}/web:latest
      
  build-catalogue:
    name: Build Catalogue Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Catalogue Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/catalogue:latest ./catalogue
          docker push ${{ secrets.DOCKER_USERNAME }}/catalogue:latest

  build-dispatch:
    name: Build Dispatch Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Dispatch Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dispatch:latest ./dispatch
          docker push ${{ secrets.DOCKER_USERNAME }}/dispatch:latest

    build-payment:
    name: Build Payment Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Payment Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/payment:latest ./payment
          docker push ${{ secrets.DOCKER_USERNAME }}/payment:latest
        
    build-shipping:
    name: Build Shipping Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Shipping Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/shipping:latest ./shipping
          docker push ${{ secrets.DOCKER_USERNAME }}/shipping:latest

  deploy:
    name: Deploy All with Helm
    runs-on: ubuntu-latest
    needs:
      - build-user
      - build-cart
      - build-web
      - build-catalogue
      - build-dispatch
      - build-payment
      - build-shipping
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials \
            --resource-group <YOUR_RESOURCE_GROUP> \
            --name <YOUR_AKS_CLUSTER> \
            --overwrite-existing

      - name: Create Namespace if Not Exists
        run: |
          kubectl get ns robot-shop || kubectl create ns robot-shop

      - name: Deploy with Helm
        run: |
          helm upgrade robot-shop ./helm \
            --install \
            --namespace robot-shop \
            --values helm/values.yaml
